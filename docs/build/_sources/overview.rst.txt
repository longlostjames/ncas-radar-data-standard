========
Overview
========

NCAS Radar Data Standard
------------------------

NCAS currently operates a variety of radars as part of its programme of
observational science and facility provision.  These range in capabilty, some
incorporating scanning antennas, and some operating in fixed, zenith pointing
mode.  This document outlines the specification of a data standard developed for
NCAS radar data. It forms part of a wider standardisation of data formats for
NCAS observational data.


---------------
FAIR Principles
---------------
The guiding principles for the NCAS Radar Data Standard are those of FAIR
(**F**\ indable **A**\ ccessible **I**\ nteroperable and **R**\ eusable) data management
:cite:p:`Wilkinson2016`.

A detailed description of the FAIR principles may be found at https://go-fair.org/fair-principles/.
For ease of reference these are reproduced in part below.
The FAIR principles of data management and stewardship aim to make data:

**Findable**

The first step in (re)using data is to find them. Metadata and data should be
easy to find for both humans and computers.  Machine-readable metadata are
essential for automatic discovery of datasets and services.

This means:

* (Meta)data should be assigned a globally unique and persistent identifier.
* Data should be described with rich metadata.
* Metadata should clearly and explicitly include the identifier of the data they describe.
* (Meta)data should be registered or indexed in a searchable resource.

**Accessible**

Once the user finds the required data, they need to know how they can be accessed,
possibly including authentication and authorisation.

This means:

* Metadata are retrievable by their identifier using a standardised communications protocol.
	* The protocol should be open, free, and universally implementable.
	* The protocol should allow for an authentication and authorization procedure, where necessary.
* Metadata should be accessible, even when the data are no longer available

**Interoperable**

The data usually need to be integrated with other data.  In addition, the data
need to interoperate with applications or workflows for analysis, storage, and
processing.

This means:

* (Meta)data should use a formal, accessible, shared, and broadly applicable language for knowledge representation.
* (Meta)data should use vocabularies that follow FAIR principles.
* (Meta)data should include qualified references to other (meta)data.

**Reusable**

The ultimate goal of FAIR is to optimise the use and reuse of data.
To achieve this, metadata and data should be well-described so that they can be
replicated and/or combined in different settings.

This means:

* (Meta)data should be richly described with a plurality of accurate and relevant attributes.
* (Meta)data should be released with a clear and accessible data usage license.
* (Meta)data should be associated with detailed provenance.
* (Meta)data should meet domain-relevant community standards.


------
NetCDF
------

NCAS radar data products are provided in the **netCDF** format.
NetCDF (Network Common Data Form) is a set of software libraries and platform
independent data formats which are designed to support the creation, access, and sharing of array-oriented scientific data. NetCDF is designed to be

* **Self-describing.** A netCDF file includes information about the data it contains (i.e. metadata).
* **Portable.** A netCDF file can be accessed by computers with different ways of storing integers, characters, and floating-point numbers.
* **Scalable.** A small subset of a large dataset may be accessed efficiently.
* **Appendable.** Data may be appended to a properly structured netCDF file without copying the dataset or redefining its structure.
* **Shareable.** One writer and many readers may simultaneously access the same netCDF file.
* **Archivable.** Access to all earlier forms of netCDF data will be supported by current and future versions of the software.

NetCDF is extremely commonly used, and is almost ubiquitous within the Earth sciences. Unidata (https://unidata.ucar.edu) provide and maintain software libraries for accessing netCDF data using C, C++, Java, and FORTRAN. Third-party libraries (which are generally bindings or wrappers to the Unidata libraries) are available for Python, IDL, MATLAB, R, Ruby, and Perl, among others.

NetCDF files generally consist of four components:

* **Attributes:** Attributes are metadata that can be attached to the netCDF file itself (called global attributes), to variables, and to groups (variable attributes and group attributes, respectively). Attributes may be textual or numeric; numeric attributes may be arrays.
* **Groups:** Groups (available since netCDF4) provide a method to encapsulate related *dimensions,* *variables,* and *attributes*. They can be thought of as somewhat analogous to directories in a filesystem.
* **Dimensions:** Dimensions specify the size of a single axis of a variable within a netCDF file. Common dimensions for geophysical data include time, latitude, and longitude, though they do not need to correspond to physical dimensions. There is no practical limit to the number of dimensions which may be defined in a netCDF file.
* **Variables:** Variables are either scalar (single values pertaining the whole data set) or named *n*\ -dimensional arrays (thus associated with *n* *dimensions*) of a specified data type. Variables may have zero or more *attributes*, which act as metadata to describe the contents of the variable.

Radar data are typically recorded as time-stamped rays, each providing values of
an observable at a set of distances (ranges) from the radar.
Such so-called field variables are thus organised into 2-dimensional arrays,
along *time* and *range* dimensions.

Below is a minimal example in Python of accessing a 2-dimensional field
variable, *ZED*, along with its *units* attribute and a global *title* attribute
from a netCDF file, is given below. Note that the netCDF library, *netCDF4*, is
not included as part of the python standard library, but may be installed using
your system package manager, pip, or conda.

.. code-block:: python
    :linenos:

    from netCDF4 import Dataset

    with Dataset('somefile.nc', 'r') as nc:
        title = nc.title
        ZED_units = nc['ZED'].units
        ZED_data = nc['ZED'][:]


--------------------
CfRadial conventions
--------------------


-------------------------
Data access and archiving
-------------------------

FAAM aim to process and make available a preliminary version of the core data product within 24 hours of a flight, although this may take slightly longer when on detachment.
The preliminary file, indicated by the postfix ``_prelim`` in the filename will initially be made available to registered users through the FAAM website, where it will also be available in an interactive visualisation tool.
The preliminary file is intended to be used for visualisation and initial analysis.

Once all of the variables in this file have been checked by a FAAM staff member, the data will be archived at the Centre for Environmental Data Analysis (CEDA; https://www.ceda.ac.uk).
The archived verison will not include the ``_prelim`` postfix, and having gone through QC, may differ from the preliminary file.
Users can access the data by first registering as a CEDA user, and then applying for access to FAAM core data. The core data file is generally freely available, however access may be restricted for upto one year at the request of a project PI.

Usage License
-------------

FAAM data are licensed under the Open Government Licence (http://www.nationalarchives.gov.uk/doc/open-government-licence).

NCAS (https://www.ncas.ac.uk/) is putting its own house inorder and applying the FAIR principles to the data it generates. Working with the data scientists at CEDA (https://www.ceda.ac.uk/), the UK archive for atmospheric and earth observation data, the NCAS-Observation team have:
Defined data products for NCAS instrumentation.
Uniquely named all the NCAS instrumentation.
Developed an integrated repository structure for software and supporting documentation.
Introduced a controlled vocabulary for instruments and data products.
Introduced file standards that utilise the controlled vocabulary and are NetCDF4 - classic compliant.
The team is also working to produce various software tools which enable easy access to the data in these files. These tools are open-source and can be accessed via the NCAS-Observations website (https://sites.google.com/ncas.ac.uk/ncasobservations/home). The site also provides access to supporting information.

This document details what a user should expect to find in one of our data files. The first section of this document details the common file components and how they should be used: this includes how file names are constructed and the use of quality control flags. The second section details a common set of file level metadata (global and variable attributes and array dimensions) that appear in all files. i.e. irrespective of the data product. The final section details the data product specific metadata.

Note that:
Files will never include metadata (dimensions, global or variable attributes) that are not detailed in the data product supporting document.
If data for a common variable is not available then, these variables will be included but will contain only their designated  _FillValue.
If data for a data product specific variable is not available then, rather than pad the file with variables containing only the _FillValue, that variable will be omitted.

All the data files have the same file-level metadata irrespective of the instrument source. The file-level metadata components in each file are:
Global attributes: including the metadata standards followed in the file, change log (history) and other useful, general information (e.g. licence, authors etc):
Dimensions: information about the data array sizes. All data have a dimension of time
Variables: attributes of each data variable included in the file, e.g. name(s), units

Comment and feedback on the data file content, structure and supporting document is always welcome and appreciated. Please contact: barbara.brooks@ncas.ac.uk




.. figure:: _static/example_data.png
	   :width: 500 px
	   :align: center

.. note::

    Something else we want to say.


See also:

- Centre for Environmental Data Analysis: https://ceda.ac.uk/
- Python ARM Radar Toolkit https://arm-doe.github.io/pyart/
- LROSE: Lidar Radar Open Software Environment: https://lrose.net/
